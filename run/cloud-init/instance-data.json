{
 "base64_encoded_keys": [],
 "ds": {
  "_doc": "EXPERIMENTAL: The structure and format of content scoped under the 'ds' key may change in subsequent releases of cloud-init.",
  "meta_data": {
   "bgp": {
    "ipv4": {
     "my-address": "",
     "my-asn": "",
     "peer-address": "",
     "peer-asn": ""
    },
    "ipv6": {
     "my-address": "",
     "my-asn": "",
     "peer-address": "",
     "peer-asn": ""
    }
   },
   "hostname": "testgit",
   "instance-id": "8298ca2f-0fa5-42de-8ac2-17c50ee76066",
   "instance-v2-id": "8298ca2f-0fa5-42de-8ac2-17c50ee76066",
   "instanceid": "60103247",
   "interfaces": [
    {
     "ipv4": {
      "additional": [],
      "address": "217.69.8.125",
      "gateway": "217.69.8.1",
      "netmask": "255.255.254.0",
      "routes": [
       {
        "netmask": 32,
        "network": "169.254.169.254"
       }
      ]
     },
     "ipv6": {
      "additional": [],
      "address": "2001:19f0:6801:19c7:5400:04ff:fe1a:766e",
      "network": "2001:19f0:6801:19c7::",
      "prefix": "64"
     },
     "mac": "56:00:04:1a:76:6e",
     "network-type": "public"
    }
   ],
   "local-hostname": "testgit",
   "nvidia-driver": [],
   "public-keys": [],
   "region": "fr",
   "startup-script": "echo No configured startup script",
   "tags": [],
   "user-data": "",
   "vendor-data": [
    "#!/bin/bash\n\nif [ -f /swapfile ]; then\n    exit 0\nfi\n\nif [ -f /var/lib/vultr/states/.swapfile ]; then\n    exit 0\nfi\n\nMEMORY=$(df -BG / | tail -n 1 | awk -F' ' '{print $2}' | sed 's/G//g')\n\n# Lets not make swaps on small drives\nif [ \"${MEMORY}\" -lt \"10\" ]; then\n    exit 0\nfi\n\nMEMORY=$((MEMORY * 100))\nif [ \"${MEMORY}\" -gt \"8000\" ]; then\n    MEMORY=8000\nfi\n\nif [ \"${MEMORY}\" -lt \"1000\" ]; then\n    MEMORY=1000\nfi\n\ndd if=/dev/zero of=/swapfile bs=1M count=${MEMORY}\nchmod 600 /swapfile\nmkswap /swapfile\nswapon /swapfile\necho \"/swapfile swap swap defaults 0 0\" >> /etc/fstab\n\nmkdir -p /var/lib/vultr/states/\ntouch /var/lib/vultr/states/.swapfile\n",
    "#!/bin/bash\n\nif [ -d /usr/local/cuda ]; then\n\trm -rf /usr/local/cuda/\nfi\n\nif [ -d /opt/nvidia ]; then\n\trm -rf /opt/nvidia\nfi\n",
    "#cloud-config\n{\"package_upgrade\":true,\"disable_root\":false,\"manage_etc_hosts\":true,\"system_info\":{\"default_user\":{\"name\":\"root\"}},\"ssh_pwauth\":1,\"chpasswd\":{\"list\":[\"root:$6$4YrA86NTlz0fWcqh$SWIR.on5xnBjqdyI08ncusa02pKsJVPCe3lgILGYc6EUx7j.bsCMkH10Ro.8pG76iNV1FgCPnYfpq0927zKF5.\"],\"expire\":false}}",
    "#!/bin/bash\n\n#\n# Functions\n#\n\nfunction check_command_exists () {\n    OUT=\"0\"\n    if ! [ -z \"$(which $1)\" ]; then\n        OUT=\"1\"\n    fi\n    echo \"${OUT}\"\n}\n\nfunction print () {\n    echo \"${@}\" >> /var/log/cloudinit_networking.log\n    echo \"${@}\"\n}\n\nfunction get_interfaces () {\n    if [ -z \"${INTERFACES}\" ]; then\n        INTERFACES=($(ls -l /sys/class/net/ | grep \"/net/e\" | awk -F' ' '{print $9}'))\n    fi\n}\n\n#\n# Start script\n#\n\n# Get the interface list\nget_interfaces\n\nif [ \"$(check_command_exists ethtool)\" == \"1\" ]; then\n    for int in \"${INTERFACES[@]}\"\n    do\n        ethtool -L ${int} combined $(nproc --all)\n    done\nelse\n    print \"Failed to find ethtool, cannot configure multi-queue!\"\nfi\n\nSYSCTL_DIR=\"/etc/sysctl.d\"\nif [ -d /usr/lib/sysctl.d/ ]; then\n    SYSCTL_DIR=\"/usr/lib/sysctl.d\"\nfi\n\nif [ -f ${SYSCTL_DIR}/90-vultr.conf ]; then\n    chattr -i ${SYSCTL_DIR}/90-vultr.conf\nfi\n\necho '# Do not modify this file unless you know how to remove this lock and the consequences' > ${SYSCTL_DIR}/90-vultr.conf\necho '# thereof. Support will not be offered for network performance if this file is removed.' >> ${SYSCTL_DIR}/90-vultr.conf\necho \"\" >> ${SYSCTL_DIR}/90-vultr.conf\necho \"# Accept IPv6 advertisements when forwarding is enabled\" >> ${SYSCTL_DIR}/90-vultr.conf\n\nfor int in \"${INTERFACES[@]}\"\ndo\n    echo \"net.ipv6.conf.${int}.accept_ra=2\" >> ${SYSCTL_DIR}/90-vultr.conf\n    sysctl -w net.ipv6.conf.${int}.accept_ra=2\ndone\necho 'net.core.default_qdisc=fq' >> ${SYSCTL_DIR}/90-vultr.conf\necho 'net.ipv4.tcp_congestion_control=bbr' >> ${SYSCTL_DIR}/90-vultr.conf\necho 'net.ipv4.tcp_rmem=4096 87380 33554432' >> ${SYSCTL_DIR}/90-vultr.conf\necho 'net.ipv4.tcp_wmem=4096 87380 33554432' >> ${SYSCTL_DIR}/90-vultr.conf\necho \"\" >> ${SYSCTL_DIR}/90-vultr.conf\n\n# Do not modify this file unless you know how to remove this lock and the consequences\n# thereof. Support will not be offered for network performance if this file is removed.\nif [ -f ${SYSCTL_DIR}/90-vultr.conf ]; then\n    chattr +i ${SYSCTL_DIR}/90-vultr.conf\nfi\n\nsysctl -w net.core.default_qdisc=fq\nsysctl -w net.ipv4.tcp_congestion_control=bbr\nsysctl -w net.ipv4.tcp_rmem=\"4096 87380 33554432\"\nsysctl -w net.ipv4.tcp_wmem=\"4096 87380 33554432\"\n",
    "#!/bin/bash\n\nsed -i -e 's/^ListenAddress 127.0.0.1//g' /etc/ssh/sshd_config\nif ! [ -f /var/lib/vultr/states/.reboot ]; then\n    systemctl reload sshd\nfi\n",
    "#!/bin/bash\n\nif [ -f /var/lib/vultr/states/.reboot ]; then\n\trm -f /var/lib/vultr/states/.reboot\n\tshutdown -r 1\n\texit 0\nfi\n"
   ]
  }
 },
 "merged_cfg": "redacted for non-root user",
 "sensitive_keys": [
  "merged_cfg"
 ],
 "sys_info": {
  "dist": [
   "ubuntu",
   "20.04",
   "focal"
  ],
  "platform": "Linux-5.4.0-122-generic-x86_64-with-glibc2.29",
  "python": "3.8.10",
  "release": "5.4.0-122-generic",
  "system": "Linux",
  "uname": [
   "Linux",
   "guest",
   "5.4.0-122-generic",
   "#138-Ubuntu SMP Wed Jun 22 15:00:31 UTC 2022",
   "x86_64",
   "x86_64"
  ],
  "variant": "ubuntu"
 },
 "v1": {
  "_beta_keys": [
   "subplatform"
  ],
  "availability-zone": null,
  "availability_zone": null,
  "cloud-name": "vultr",
  "cloud_id": "vultr",
  "cloud_name": "vultr",
  "distro": "ubuntu",
  "distro_release": "focal",
  "distro_version": "20.04",
  "instance-id": "8298ca2f-0fa5-42de-8ac2-17c50ee76066",
  "instance_id": "8298ca2f-0fa5-42de-8ac2-17c50ee76066",
  "kernel_release": "5.4.0-122-generic",
  "local-hostname": "testgit",
  "local_hostname": "testgit",
  "machine": "x86_64",
  "platform": "vultr",
  "public_ssh_keys": [],
  "python_version": "3.8.10",
  "region": "fr",
  "subplatform": "unknown",
  "system_platform": "Linux-5.4.0-122-generic-x86_64-with-glibc2.29",
  "variant": "ubuntu"
 }
}
